/**************************************************************************************************

 @File   : [ MeshRenderDX.cpp ] 
 @Auther : Unisawa

**************************************************************************************************/



//***********************************************************************************************//
//                                                                                               //
//  @Include File                                                                                //
//                                                                                               //
//***********************************************************************************************//

//-----MainSetting-----//
#include "001_Manager/Manager.h"

//-----Object-----//
#include "004_Component/0040_RenderDX/00420_Mesh/MeshDX.h"
#include "004_Component/0040_RenderDX/00420_Mesh/MeshRenderDX.h"
#include "004_Component/0042_GameObject/Transform.h"

//***********************************************************************************************//
//                                                                                               //
//  @Macro Definition                                                                            //
//                                                                                               //
//***********************************************************************************************//
#ifdef USE_DIRECTX

const std::string MeshRenderDX::className = "MeshRenderDX";

//***********************************************************************************************//
//                                                                                               //
//  @Static Variable                                                                             //
//                                                                                               //
//***********************************************************************************************//

/*=================================================================================================
  @Summary: コンストラクタ
  @Details: None
=================================================================================================*/
MeshRenderDX::MeshRenderDX(GameObject* pObject, GameObject::LAYER Layer) : RenderDX(pObject, className, Layer)
{
    pMesh = NULL;
}

/*===============================================================================================* 
  @Summary: デストラクタ
  @Details: None
 *===============================================================================================*/
MeshRenderDX::~MeshRenderDX()
{

}

/*===============================================================================================* 
  @Summary: 初期化処理
  @Details: None
 *===============================================================================================*/
void MeshRenderDX::Init()
{

}

/*===============================================================================================* 
  @Summary: 終了処理
  @Details: None
 *===============================================================================================*/
void MeshRenderDX::Uninit()
{
    RenderDXManager::UnLinkList(this);
}

/*===============================================================================================* 
  @Summary: 更新処理
  @Details: None
 *===============================================================================================*/
void MeshRenderDX::Update()
{

}

/*===============================================================================================* 
  @Summary:描画処理
  @Details: None
 *===============================================================================================*/
void MeshRenderDX::Draw()
{
    if (pMesh == NULL) return;

    // デバイスオブジェクトの取得
    LPDIRECT3DDEVICE9 pDevice = RenderDXManager::GetDevice();

    // ワールド行列の計算
    gameObject->transform->CreateWorldMatrix();
    pDevice->SetTransform(D3DTS_WORLD, &transform->GetWorldMatrix());

    // 描画設定
    SetUpBlending();
    SetUpCulling();
    SetUpMaterial();

    // バッファの描画設定
    pDevice->SetStreamSource(0, pMesh->pVertexBuffer, 0, sizeof(VERTEX_3D));
    pDevice->SetIndices(pMesh->pIndexBuffer);
    pDevice->SetFVF(FVF_VERTEX_3D);

    // ポリゴンの描画
    pDevice->DrawIndexedPrimitive(D3DPT_TRIANGLESTRIP, 0, 0, pMesh->vertexIndexNum, 0, pMesh->vertexIndexNum - 2);

    // マテリアルリセット
    ResetMaterial();
}

/*===============================================================================================* 
  @Summary: 
  @Details: 
 *===============================================================================================*/

#endif
//===============================================================================================//
//                                                                                               //
//                                          @End of File                                         //
//                                                                                               //
//===============================================================================================//